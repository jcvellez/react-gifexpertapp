[{"C:\\VARIOS\\REACTFH2\\04-gift-expert-app\\src\\index.js":"1","C:\\VARIOS\\REACTFH2\\04-gift-expert-app\\src\\GifExpertApp.js":"2","C:\\VARIOS\\REACTFH2\\04-gift-expert-app\\src\\GifGrid.js":"3","C:\\VARIOS\\REACTFH2\\04-gift-expert-app\\src\\AddCategory.js":"4","C:\\VARIOS\\REACTFH2\\04-gift-expert-app\\src\\GifGridItem.js":"5","C:\\VARIOS\\REACTFH2\\04-gift-expert-app\\src\\helpers\\getGifs.js":"6","C:\\VARIOS\\REACTFH2\\04-gift-expert-app\\src\\hooks\\useFetchGIfs.js":"7"},{"size":247,"mtime":1683814854761,"results":"8","hashOfConfig":"9"},{"size":921,"mtime":1683814854736,"results":"10","hashOfConfig":"9"},{"size":1276,"mtime":1684958524460,"results":"11","hashOfConfig":"9"},{"size":840,"mtime":1683814854733,"results":"12","hashOfConfig":"9"},{"size":487,"mtime":1683824557941,"results":"13","hashOfConfig":"9"},{"size":947,"mtime":1683823178900,"results":"14","hashOfConfig":"9"},{"size":982,"mtime":1683823175513,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nqyq8r",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\VARIOS\\REACTFH2\\04-gift-expert-app\\src\\index.js",[],[],"C:\\VARIOS\\REACTFH2\\04-gift-expert-app\\src\\GifExpertApp.js",["42"],[],"import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { AddCategory } from './AddCategory';\r\nimport GifGrid from './GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['OPne Punch']);\r\n\r\n    // const handleAdd = ()=>{\r\n    //     //setCategories( ['Hunter' , ...categories] );\r\n    //     setCategories( (cats)=> [...categories , 'Hunter' ]  );    \r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map((category) => (                        \r\n                        <GifGrid key={category} category={category}/>\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n// GifExpertApp.propTypes = {\r\n\r\n// }\r\n\r\nexport {\r\n    GifExpertApp\r\n}\r\n","C:\\VARIOS\\REACTFH2\\04-gift-expert-app\\src\\GifGrid.js",["43","44","45"],[],"import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport GifGridItem from './GifGridItem';\r\n//import { getGifs } from './helpers/getGifs';\r\nimport { useFetchGIfs } from './hooks/useFetchGIfs'\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    // let [images, setimages] = useState([])\r\n    const { data:images , loading } = useFetchGIfs(); // data:images\r\n    console.log(loading);\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn' >{category}</h3>\r\n            {/* { loading ? 'Cargando...' : 'Data Cargada' } */}\r\n            { loading && <p className='animate__animated animate__flash' > Loading </p> }\r\n            <div className='card-grid'>\r\n                <ol>\r\n                    {\r\n                        images.map((item) => (\r\n                            <GifGridItem key={item.id} {...item} />\r\n                            //<GifGridItem key={ item.id } item={ item } />\r\n                        ))\r\n                    }\r\n\r\n                    {/* {\r\n                        images.map((item) => <li key={item.id}>{item.name}</li>)\r\n                    } */}\r\n                </ol>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nGifGrid.propTypes = {\r\n\r\n}\r\n\r\nexport default GifGrid\r\n","C:\\VARIOS\\REACTFH2\\04-gift-expert-app\\src\\AddCategory.js",[],[],"C:\\VARIOS\\REACTFH2\\04-gift-expert-app\\src\\GifGridItem.js",["46","47"],[],"import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst GifGidItem = ({ id, name, url }) => { //aqui puedes usar props oaplicar destructuracion de elementos\r\n    console.log({ id, name, url });\r\n   \r\n    \r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeInLeft'>\r\n            <img src={url} alt={name}></img>\r\n            <p>{name}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n// GifGidItem.propTypes = {\r\n// }\r\n\r\nexport default GifGidItem\r\n",[],"C:\\VARIOS\\REACTFH2\\04-gift-expert-app\\src\\helpers\\getGifs.js",["48"],[],"export const getGifs = async () => {\r\n    let poke = 'pikachu'\r\n    //const url = `https://pokeapi.co/api/v2/pokemon/${poke}`;  \r\n    const url = `https://pokeapi.co/api/v2/pokemon?limit=10&offset=0`;\r\n    const respuesta = await fetch(url);\r\n    //const {id} = await respuesta.json();\r\n    //const { name } = await respuesta.json();\r\n    //const { sprites } = await respuesta.json();\r\n    //const { front_default } =  sprites.other.home;\r\n    //const resp = respuesta;       \r\n    const { results } = await respuesta.json();\r\n    //console.log('FRONT_DEFAULT',front_default);\r\n    const gifs = results.map((img, i) => {\r\n        return {\r\n            id: i + 1,\r\n            name: img.name,\r\n            url: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/home/${i + 1}.png` //img.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n    //console.log(gifs);\r\n    //setimages(gifs);\r\n    //images = setimages(gifs);\r\n\r\n}","C:\\VARIOS\\REACTFH2\\04-gift-expert-app\\src\\hooks\\useFetchGIfs.js",[],[],{"ruleId":"49","severity":1,"message":"50","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":17},{"ruleId":"49","severity":1,"message":"53","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":25},{"ruleId":"49","severity":1,"message":"54","line":1,"column":27,"nodeType":"51","messageId":"52","endLine":1,"endColumn":36},{"ruleId":"49","severity":1,"message":"50","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":17},{"ruleId":"49","severity":1,"message":"54","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":26},{"ruleId":"49","severity":1,"message":"50","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":17},{"ruleId":"49","severity":1,"message":"55","line":2,"column":9,"nodeType":"51","messageId":"52","endLine":2,"endColumn":13},"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'poke' is assigned a value but never used."]